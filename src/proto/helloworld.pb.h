// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: helloworld.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_helloworld_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_helloworld_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_helloworld_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_helloworld_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_helloworld_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_helloworld_2eproto_metadata_getter(int index);
namespace helloworld {
class HelloRequest;
struct HelloRequestDefaultTypeInternal;
extern HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
class HelloResponse;
struct HelloResponseDefaultTypeInternal;
extern HelloResponseDefaultTypeInternal _HelloResponse_default_instance_;
}  // namespace helloworld
PROTOBUF_NAMESPACE_OPEN
template<> ::helloworld::HelloRequest* Arena::CreateMaybeMessage<::helloworld::HelloRequest>(Arena*);
template<> ::helloworld::HelloResponse* Arena::CreateMaybeMessage<::helloworld::HelloResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace helloworld {

// ===================================================================

class HelloRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:helloworld.HelloRequest) */ {
 public:
  inline HelloRequest() : HelloRequest(nullptr) {}
  virtual ~HelloRequest();
  explicit constexpr HelloRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HelloRequest(const HelloRequest& from);
  HelloRequest(HelloRequest&& from) noexcept
    : HelloRequest() {
    *this = ::std::move(from);
  }

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloRequest& operator=(HelloRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HelloRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HelloRequest* internal_default_instance() {
    return reinterpret_cast<const HelloRequest*>(
               &_HelloRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HelloRequest& a, HelloRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HelloRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HelloRequest* New() const final {
    return CreateMaybeMessage<HelloRequest>(nullptr);
  }

  HelloRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HelloRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HelloRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "helloworld.HelloRequest";
  }
  protected:
  explicit HelloRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_helloworld_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kParamStructFieldNumber = 2,
    kParamListValueFieldNumber = 3,
    kParamValueFieldNumber = 4,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Struct param_struct = 2;
  bool has_param_struct() const;
  private:
  bool _internal_has_param_struct() const;
  public:
  void clear_param_struct();
  const PROTOBUF_NAMESPACE_ID::Struct& param_struct() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_param_struct();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_param_struct();
  void set_allocated_param_struct(PROTOBUF_NAMESPACE_ID::Struct* param_struct);
  private:
  const PROTOBUF_NAMESPACE_ID::Struct& _internal_param_struct() const;
  PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_param_struct();
  public:
  void unsafe_arena_set_allocated_param_struct(
      PROTOBUF_NAMESPACE_ID::Struct* param_struct);
  PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_param_struct();

  // .google.protobuf.ListValue param_list_value = 3;
  bool has_param_list_value() const;
  private:
  bool _internal_has_param_list_value() const;
  public:
  void clear_param_list_value();
  const PROTOBUF_NAMESPACE_ID::ListValue& param_list_value() const;
  PROTOBUF_NAMESPACE_ID::ListValue* release_param_list_value();
  PROTOBUF_NAMESPACE_ID::ListValue* mutable_param_list_value();
  void set_allocated_param_list_value(PROTOBUF_NAMESPACE_ID::ListValue* param_list_value);
  private:
  const PROTOBUF_NAMESPACE_ID::ListValue& _internal_param_list_value() const;
  PROTOBUF_NAMESPACE_ID::ListValue* _internal_mutable_param_list_value();
  public:
  void unsafe_arena_set_allocated_param_list_value(
      PROTOBUF_NAMESPACE_ID::ListValue* param_list_value);
  PROTOBUF_NAMESPACE_ID::ListValue* unsafe_arena_release_param_list_value();

  // .google.protobuf.Value param_value = 4;
  bool has_param_value() const;
  private:
  bool _internal_has_param_value() const;
  public:
  void clear_param_value();
  const PROTOBUF_NAMESPACE_ID::Value& param_value() const;
  PROTOBUF_NAMESPACE_ID::Value* release_param_value();
  PROTOBUF_NAMESPACE_ID::Value* mutable_param_value();
  void set_allocated_param_value(PROTOBUF_NAMESPACE_ID::Value* param_value);
  private:
  const PROTOBUF_NAMESPACE_ID::Value& _internal_param_value() const;
  PROTOBUF_NAMESPACE_ID::Value* _internal_mutable_param_value();
  public:
  void unsafe_arena_set_allocated_param_value(
      PROTOBUF_NAMESPACE_ID::Value* param_value);
  PROTOBUF_NAMESPACE_ID::Value* unsafe_arena_release_param_value();

  // @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::Struct* param_struct_;
  PROTOBUF_NAMESPACE_ID::ListValue* param_list_value_;
  PROTOBUF_NAMESPACE_ID::Value* param_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_helloworld_2eproto;
};
// -------------------------------------------------------------------

class HelloResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:helloworld.HelloResponse) */ {
 public:
  inline HelloResponse() : HelloResponse(nullptr) {}
  virtual ~HelloResponse();
  explicit constexpr HelloResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HelloResponse(const HelloResponse& from);
  HelloResponse(HelloResponse&& from) noexcept
    : HelloResponse() {
    *this = ::std::move(from);
  }

  inline HelloResponse& operator=(const HelloResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloResponse& operator=(HelloResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HelloResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HelloResponse* internal_default_instance() {
    return reinterpret_cast<const HelloResponse*>(
               &_HelloResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HelloResponse& a, HelloResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(HelloResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HelloResponse* New() const final {
    return CreateMaybeMessage<HelloResponse>(nullptr);
  }

  HelloResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HelloResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HelloResponse& from);
  void MergeFrom(const HelloResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HelloResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "helloworld.HelloResponse";
  }
  protected:
  explicit HelloResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_helloworld_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
    kParamStructFieldNumber = 3,
    kParamListValueFieldNumber = 4,
    kParamValueFieldNumber = 5,
    kSnakeCaseFieldNumber = 2,
  };
  // string message = 1;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // .google.protobuf.Struct param_struct = 3;
  bool has_param_struct() const;
  private:
  bool _internal_has_param_struct() const;
  public:
  void clear_param_struct();
  const PROTOBUF_NAMESPACE_ID::Struct& param_struct() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_param_struct();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_param_struct();
  void set_allocated_param_struct(PROTOBUF_NAMESPACE_ID::Struct* param_struct);
  private:
  const PROTOBUF_NAMESPACE_ID::Struct& _internal_param_struct() const;
  PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_param_struct();
  public:
  void unsafe_arena_set_allocated_param_struct(
      PROTOBUF_NAMESPACE_ID::Struct* param_struct);
  PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_param_struct();

  // .google.protobuf.ListValue param_list_value = 4;
  bool has_param_list_value() const;
  private:
  bool _internal_has_param_list_value() const;
  public:
  void clear_param_list_value();
  const PROTOBUF_NAMESPACE_ID::ListValue& param_list_value() const;
  PROTOBUF_NAMESPACE_ID::ListValue* release_param_list_value();
  PROTOBUF_NAMESPACE_ID::ListValue* mutable_param_list_value();
  void set_allocated_param_list_value(PROTOBUF_NAMESPACE_ID::ListValue* param_list_value);
  private:
  const PROTOBUF_NAMESPACE_ID::ListValue& _internal_param_list_value() const;
  PROTOBUF_NAMESPACE_ID::ListValue* _internal_mutable_param_list_value();
  public:
  void unsafe_arena_set_allocated_param_list_value(
      PROTOBUF_NAMESPACE_ID::ListValue* param_list_value);
  PROTOBUF_NAMESPACE_ID::ListValue* unsafe_arena_release_param_list_value();

  // .google.protobuf.Value param_value = 5;
  bool has_param_value() const;
  private:
  bool _internal_has_param_value() const;
  public:
  void clear_param_value();
  const PROTOBUF_NAMESPACE_ID::Value& param_value() const;
  PROTOBUF_NAMESPACE_ID::Value* release_param_value();
  PROTOBUF_NAMESPACE_ID::Value* mutable_param_value();
  void set_allocated_param_value(PROTOBUF_NAMESPACE_ID::Value* param_value);
  private:
  const PROTOBUF_NAMESPACE_ID::Value& _internal_param_value() const;
  PROTOBUF_NAMESPACE_ID::Value* _internal_mutable_param_value();
  public:
  void unsafe_arena_set_allocated_param_value(
      PROTOBUF_NAMESPACE_ID::Value* param_value);
  PROTOBUF_NAMESPACE_ID::Value* unsafe_arena_release_param_value();

  // bool snake_case = 2;
  void clear_snake_case();
  bool snake_case() const;
  void set_snake_case(bool value);
  private:
  bool _internal_snake_case() const;
  void _internal_set_snake_case(bool value);
  public:

  // @@protoc_insertion_point(class_scope:helloworld.HelloResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  PROTOBUF_NAMESPACE_ID::Struct* param_struct_;
  PROTOBUF_NAMESPACE_ID::ListValue* param_list_value_;
  PROTOBUF_NAMESPACE_ID::Value* param_value_;
  bool snake_case_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_helloworld_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HelloRequest

// string name = 1;
inline void HelloRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.name)
  return _internal_name();
}
inline void HelloRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.name)
}
inline std::string* HelloRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.name)
  return _internal_mutable_name();
}
inline const std::string& HelloRequest::_internal_name() const {
  return name_.Get();
}
inline void HelloRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void HelloRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:helloworld.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:helloworld.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloRequest.name)
}
inline std::string* HelloRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* HelloRequest::release_name() {
  // @@protoc_insertion_point(field_release:helloworld.HelloRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void HelloRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.name)
}

// .google.protobuf.Struct param_struct = 2;
inline bool HelloRequest::_internal_has_param_struct() const {
  return this != internal_default_instance() && param_struct_ != nullptr;
}
inline bool HelloRequest::has_param_struct() const {
  return _internal_has_param_struct();
}
inline const PROTOBUF_NAMESPACE_ID::Struct& HelloRequest::_internal_param_struct() const {
  const PROTOBUF_NAMESPACE_ID::Struct* p = param_struct_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Struct&>(
      PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Struct& HelloRequest::param_struct() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.param_struct)
  return _internal_param_struct();
}
inline void HelloRequest::unsafe_arena_set_allocated_param_struct(
    PROTOBUF_NAMESPACE_ID::Struct* param_struct) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_struct_);
  }
  param_struct_ = param_struct;
  if (param_struct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:helloworld.HelloRequest.param_struct)
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloRequest::release_param_struct() {
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = param_struct_;
  param_struct_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloRequest::unsafe_arena_release_param_struct() {
  // @@protoc_insertion_point(field_release:helloworld.HelloRequest.param_struct)
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = param_struct_;
  param_struct_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloRequest::_internal_mutable_param_struct() {
  
  if (param_struct_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Struct>(GetArena());
    param_struct_ = p;
  }
  return param_struct_;
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloRequest::mutable_param_struct() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.param_struct)
  return _internal_mutable_param_struct();
}
inline void HelloRequest::set_allocated_param_struct(PROTOBUF_NAMESPACE_ID::Struct* param_struct) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_struct_);
  }
  if (param_struct) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_struct)->GetArena();
    if (message_arena != submessage_arena) {
      param_struct = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, param_struct, submessage_arena);
    }
    
  } else {
    
  }
  param_struct_ = param_struct;
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.param_struct)
}

// .google.protobuf.ListValue param_list_value = 3;
inline bool HelloRequest::_internal_has_param_list_value() const {
  return this != internal_default_instance() && param_list_value_ != nullptr;
}
inline bool HelloRequest::has_param_list_value() const {
  return _internal_has_param_list_value();
}
inline const PROTOBUF_NAMESPACE_ID::ListValue& HelloRequest::_internal_param_list_value() const {
  const PROTOBUF_NAMESPACE_ID::ListValue* p = param_list_value_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::ListValue&>(
      PROTOBUF_NAMESPACE_ID::_ListValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::ListValue& HelloRequest::param_list_value() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.param_list_value)
  return _internal_param_list_value();
}
inline void HelloRequest::unsafe_arena_set_allocated_param_list_value(
    PROTOBUF_NAMESPACE_ID::ListValue* param_list_value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_list_value_);
  }
  param_list_value_ = param_list_value;
  if (param_list_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:helloworld.HelloRequest.param_list_value)
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloRequest::release_param_list_value() {
  
  PROTOBUF_NAMESPACE_ID::ListValue* temp = param_list_value_;
  param_list_value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloRequest::unsafe_arena_release_param_list_value() {
  // @@protoc_insertion_point(field_release:helloworld.HelloRequest.param_list_value)
  
  PROTOBUF_NAMESPACE_ID::ListValue* temp = param_list_value_;
  param_list_value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloRequest::_internal_mutable_param_list_value() {
  
  if (param_list_value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::ListValue>(GetArena());
    param_list_value_ = p;
  }
  return param_list_value_;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloRequest::mutable_param_list_value() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.param_list_value)
  return _internal_mutable_param_list_value();
}
inline void HelloRequest::set_allocated_param_list_value(PROTOBUF_NAMESPACE_ID::ListValue* param_list_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_list_value_);
  }
  if (param_list_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_list_value)->GetArena();
    if (message_arena != submessage_arena) {
      param_list_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, param_list_value, submessage_arena);
    }
    
  } else {
    
  }
  param_list_value_ = param_list_value;
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.param_list_value)
}

// .google.protobuf.Value param_value = 4;
inline bool HelloRequest::_internal_has_param_value() const {
  return this != internal_default_instance() && param_value_ != nullptr;
}
inline bool HelloRequest::has_param_value() const {
  return _internal_has_param_value();
}
inline const PROTOBUF_NAMESPACE_ID::Value& HelloRequest::_internal_param_value() const {
  const PROTOBUF_NAMESPACE_ID::Value* p = param_value_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Value&>(
      PROTOBUF_NAMESPACE_ID::_Value_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Value& HelloRequest::param_value() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.param_value)
  return _internal_param_value();
}
inline void HelloRequest::unsafe_arena_set_allocated_param_value(
    PROTOBUF_NAMESPACE_ID::Value* param_value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_value_);
  }
  param_value_ = param_value;
  if (param_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:helloworld.HelloRequest.param_value)
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloRequest::release_param_value() {
  
  PROTOBUF_NAMESPACE_ID::Value* temp = param_value_;
  param_value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloRequest::unsafe_arena_release_param_value() {
  // @@protoc_insertion_point(field_release:helloworld.HelloRequest.param_value)
  
  PROTOBUF_NAMESPACE_ID::Value* temp = param_value_;
  param_value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloRequest::_internal_mutable_param_value() {
  
  if (param_value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Value>(GetArena());
    param_value_ = p;
  }
  return param_value_;
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloRequest::mutable_param_value() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.param_value)
  return _internal_mutable_param_value();
}
inline void HelloRequest::set_allocated_param_value(PROTOBUF_NAMESPACE_ID::Value* param_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_value_);
  }
  if (param_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_value)->GetArena();
    if (message_arena != submessage_arena) {
      param_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, param_value, submessage_arena);
    }
    
  } else {
    
  }
  param_value_ = param_value;
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.param_value)
}

// -------------------------------------------------------------------

// HelloResponse

// string message = 1;
inline void HelloResponse::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& HelloResponse::message() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloResponse.message)
  return _internal_message();
}
inline void HelloResponse::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:helloworld.HelloResponse.message)
}
inline std::string* HelloResponse::mutable_message() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloResponse.message)
  return _internal_mutable_message();
}
inline const std::string& HelloResponse::_internal_message() const {
  return message_.Get();
}
inline void HelloResponse::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void HelloResponse::set_message(std::string&& value) {
  
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:helloworld.HelloResponse.message)
}
inline void HelloResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:helloworld.HelloResponse.message)
}
inline void HelloResponse::set_message(const char* value,
    size_t size) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloResponse.message)
}
inline std::string* HelloResponse::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* HelloResponse::release_message() {
  // @@protoc_insertion_point(field_release:helloworld.HelloResponse.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void HelloResponse::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloResponse.message)
}

// bool snake_case = 2;
inline void HelloResponse::clear_snake_case() {
  snake_case_ = false;
}
inline bool HelloResponse::_internal_snake_case() const {
  return snake_case_;
}
inline bool HelloResponse::snake_case() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloResponse.snake_case)
  return _internal_snake_case();
}
inline void HelloResponse::_internal_set_snake_case(bool value) {
  
  snake_case_ = value;
}
inline void HelloResponse::set_snake_case(bool value) {
  _internal_set_snake_case(value);
  // @@protoc_insertion_point(field_set:helloworld.HelloResponse.snake_case)
}

// .google.protobuf.Struct param_struct = 3;
inline bool HelloResponse::_internal_has_param_struct() const {
  return this != internal_default_instance() && param_struct_ != nullptr;
}
inline bool HelloResponse::has_param_struct() const {
  return _internal_has_param_struct();
}
inline const PROTOBUF_NAMESPACE_ID::Struct& HelloResponse::_internal_param_struct() const {
  const PROTOBUF_NAMESPACE_ID::Struct* p = param_struct_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Struct&>(
      PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Struct& HelloResponse::param_struct() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloResponse.param_struct)
  return _internal_param_struct();
}
inline void HelloResponse::unsafe_arena_set_allocated_param_struct(
    PROTOBUF_NAMESPACE_ID::Struct* param_struct) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_struct_);
  }
  param_struct_ = param_struct;
  if (param_struct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:helloworld.HelloResponse.param_struct)
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloResponse::release_param_struct() {
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = param_struct_;
  param_struct_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloResponse::unsafe_arena_release_param_struct() {
  // @@protoc_insertion_point(field_release:helloworld.HelloResponse.param_struct)
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = param_struct_;
  param_struct_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloResponse::_internal_mutable_param_struct() {
  
  if (param_struct_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Struct>(GetArena());
    param_struct_ = p;
  }
  return param_struct_;
}
inline PROTOBUF_NAMESPACE_ID::Struct* HelloResponse::mutable_param_struct() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloResponse.param_struct)
  return _internal_mutable_param_struct();
}
inline void HelloResponse::set_allocated_param_struct(PROTOBUF_NAMESPACE_ID::Struct* param_struct) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_struct_);
  }
  if (param_struct) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_struct)->GetArena();
    if (message_arena != submessage_arena) {
      param_struct = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, param_struct, submessage_arena);
    }
    
  } else {
    
  }
  param_struct_ = param_struct;
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloResponse.param_struct)
}

// .google.protobuf.ListValue param_list_value = 4;
inline bool HelloResponse::_internal_has_param_list_value() const {
  return this != internal_default_instance() && param_list_value_ != nullptr;
}
inline bool HelloResponse::has_param_list_value() const {
  return _internal_has_param_list_value();
}
inline const PROTOBUF_NAMESPACE_ID::ListValue& HelloResponse::_internal_param_list_value() const {
  const PROTOBUF_NAMESPACE_ID::ListValue* p = param_list_value_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::ListValue&>(
      PROTOBUF_NAMESPACE_ID::_ListValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::ListValue& HelloResponse::param_list_value() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloResponse.param_list_value)
  return _internal_param_list_value();
}
inline void HelloResponse::unsafe_arena_set_allocated_param_list_value(
    PROTOBUF_NAMESPACE_ID::ListValue* param_list_value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_list_value_);
  }
  param_list_value_ = param_list_value;
  if (param_list_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:helloworld.HelloResponse.param_list_value)
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloResponse::release_param_list_value() {
  
  PROTOBUF_NAMESPACE_ID::ListValue* temp = param_list_value_;
  param_list_value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloResponse::unsafe_arena_release_param_list_value() {
  // @@protoc_insertion_point(field_release:helloworld.HelloResponse.param_list_value)
  
  PROTOBUF_NAMESPACE_ID::ListValue* temp = param_list_value_;
  param_list_value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloResponse::_internal_mutable_param_list_value() {
  
  if (param_list_value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::ListValue>(GetArena());
    param_list_value_ = p;
  }
  return param_list_value_;
}
inline PROTOBUF_NAMESPACE_ID::ListValue* HelloResponse::mutable_param_list_value() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloResponse.param_list_value)
  return _internal_mutable_param_list_value();
}
inline void HelloResponse::set_allocated_param_list_value(PROTOBUF_NAMESPACE_ID::ListValue* param_list_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_list_value_);
  }
  if (param_list_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_list_value)->GetArena();
    if (message_arena != submessage_arena) {
      param_list_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, param_list_value, submessage_arena);
    }
    
  } else {
    
  }
  param_list_value_ = param_list_value;
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloResponse.param_list_value)
}

// .google.protobuf.Value param_value = 5;
inline bool HelloResponse::_internal_has_param_value() const {
  return this != internal_default_instance() && param_value_ != nullptr;
}
inline bool HelloResponse::has_param_value() const {
  return _internal_has_param_value();
}
inline const PROTOBUF_NAMESPACE_ID::Value& HelloResponse::_internal_param_value() const {
  const PROTOBUF_NAMESPACE_ID::Value* p = param_value_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Value&>(
      PROTOBUF_NAMESPACE_ID::_Value_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Value& HelloResponse::param_value() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloResponse.param_value)
  return _internal_param_value();
}
inline void HelloResponse::unsafe_arena_set_allocated_param_value(
    PROTOBUF_NAMESPACE_ID::Value* param_value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_value_);
  }
  param_value_ = param_value;
  if (param_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:helloworld.HelloResponse.param_value)
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloResponse::release_param_value() {
  
  PROTOBUF_NAMESPACE_ID::Value* temp = param_value_;
  param_value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloResponse::unsafe_arena_release_param_value() {
  // @@protoc_insertion_point(field_release:helloworld.HelloResponse.param_value)
  
  PROTOBUF_NAMESPACE_ID::Value* temp = param_value_;
  param_value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloResponse::_internal_mutable_param_value() {
  
  if (param_value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Value>(GetArena());
    param_value_ = p;
  }
  return param_value_;
}
inline PROTOBUF_NAMESPACE_ID::Value* HelloResponse::mutable_param_value() {
  // @@protoc_insertion_point(field_mutable:helloworld.HelloResponse.param_value)
  return _internal_mutable_param_value();
}
inline void HelloResponse::set_allocated_param_value(PROTOBUF_NAMESPACE_ID::Value* param_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_value_);
  }
  if (param_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(param_value)->GetArena();
    if (message_arena != submessage_arena) {
      param_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, param_value, submessage_arena);
    }
    
  } else {
    
  }
  param_value_ = param_value;
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloResponse.param_value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_helloworld_2eproto
